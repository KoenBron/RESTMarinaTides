openapi: 3.0.3
info:
  title: REST MarinaTides
  version: 1.0.0
  description: Your project description
paths:
  /account/:
    get:
      operationId: account_list
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: account_create
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /account/{format}:
    get:
      operationId: account_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: account_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /account/{id}/:
    get:
      operationId: account_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: account_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: account_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: account_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /account/{id}{format}:
    get:
      operationId: account_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: account_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: account_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: account_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - account
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /base/addboat/{id}/:
    get:
      operationId: base_addboat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBoatToEmployee'
          description: ''
    put:
      operationId: base_addboat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBoatToEmployee'
          description: ''
  /base/addboat/{id}{format}:
    get:
      operationId: base_addboat_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBoatToEmployee'
          description: ''
    put:
      operationId: base_addboat_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddBoatToEmployee'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBoatToEmployee'
          description: ''
  /base/boat/{id}/:
    get:
      operationId: base_boat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    put:
      operationId: base_boat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Boat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Boat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    patch:
      operationId: base_boat_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    delete:
      operationId: base_boat_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /base/boat/{id}{format}:
    get:
      operationId: base_boat_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    put:
      operationId: base_boat_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Boat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Boat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    patch:
      operationId: base_boat_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoat'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
    delete:
      operationId: base_boat_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /base/boats/:
    get:
      operationId: base_boats_list
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
          description: ''
    post:
      operationId: base_boats_create
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Boat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Boat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
  /base/boats{format}:
    get:
      operationId: base_boats_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Boat'
          description: ''
    post:
      operationId: base_boats_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Boat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Boat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boat'
          description: ''
  /base/customer/{id}/:
    get:
      operationId: base_customer_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: base_customer_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: base_customer_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: base_customer_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /base/customer/{id}{format}:
    get:
      operationId: base_customer_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: base_customer_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: base_customer_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: base_customer_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /base/customers/:
    get:
      operationId: base_customers_list
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: base_customers_create
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /base/customers{format}:
    get:
      operationId: base_customers_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: base_customers_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /base/removeboat/{id}/:
    get:
      operationId: base_removeboat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          description: ''
    put:
      operationId: base_removeboat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          description: ''
  /base/removeboat/{id}{format}:
    get:
      operationId: base_removeboat_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          description: ''
    put:
      operationId: base_removeboat_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - base
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoveEmployeesFromBoat'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveEmployeesFromBoat'
          description: ''
components:
  schemas:
    AddBoatToEmployee:
      type: object
      properties:
        employees:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - employees
    Boat:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 120
        description:
          type: string
        users:
          type: array
          items:
            type: integer
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
      required:
      - customer
      - name
      - pk
      - users
    Customer:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        users:
          type: array
          items:
            type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 60
        last_name:
          type: string
          maxLength: 60
      required:
      - first_name
      - last_name
      - pk
      - users
    PatchedBoat:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 120
        description:
          type: string
        users:
          type: array
          items:
            type: integer
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          readOnly: true
    PatchedCustomer:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        users:
          type: array
          items:
            type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 60
        last_name:
          type: string
          maxLength: 60
    PatchedUser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
    RemoveEmployeesFromBoat:
      type: object
      properties:
        employees:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - employees
    User:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password
      - password2
      - pk
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
